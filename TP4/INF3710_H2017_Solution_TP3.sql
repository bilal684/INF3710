-- Poly Montréal
-- INF3710 Hiver 2017
-- Solutionnaire TP 3
--------------------------------------------------------

---------- Création de la table MEMBRE 
CREATE TABLE MEMBRE(
NumM NUMBER(10) CONSTRAINT MEMBRE_PK PRIMARY KEY,
Nom VARCHAR2(50) CONSTRAINT NOM_MEMBRE_NN NOT NULL,
Prenom VARCHAR2(50) CONSTRAINT PRENOM_MEMBRE_NN NOT NULL,
photoM VARCHAR2(255),
Email VARCHAR2(50) CONSTRAINT email_NN NOT NULL,
typeProfil CHAR(1) CONSTRAINT Profil_CK check (upper(typeProfil)in ('P', 'V')),
dateInscription DATE CONSTRAINT DATEINSCRIPTION_NN NOT NULL,
nAbonne number default 0
);

---------- Création de la table ABONNE
CREATE TABLE ABONNE(
NumM NUMBER(10),
NumAbonne NUMBER(10) ,
debutAbonnement DATE CONSTRAINT debutAbonnement_NN NOT NULL,
finAbonnement DATE,
CONSTRAINT ABONNE_PK PRIMARY KEY (NumM,NumAbonne),
CONSTRAINT ABONNE_NUMA_FK FOREIGN KEY (NumAbonne) REFERENCES MEMBRE(numM),
CONSTRAINT ABONNE_NUMM_FK FOREIGN KEY (NumM) REFERENCES MEMBRE(numM)
);

---------- Création de la table AMI
CREATE TABLE AMI(
NumM NUMBER(10),
NumAmi NUMBER(10) ,
CONSTRAINT AMI_PK PRIMARY KEY (NumM,NumAmi),
CONSTRAINT AMI_NUMA_FK FOREIGN KEY (NumAmi) REFERENCES MEMBRE(numM),
CONSTRAINT AMI_NUMM_FK FOREIGN KEY (NumM) REFERENCES MEMBRE(numM)
);

---------- Création de la table Photo
CREATE TABLE PHOTO(
numPhoto NUMBER(20) CONSTRAINT Photo_PK PRIMARY KEY,
numM NUMBER(10),
urlPhoto VARCHAR2(255),
descriptionPhoto LONG,
debutPublication DATE CONSTRAINT debutPublication_NN NOT NULL,
finPublication DATE,
CONSTRAINT Photo_numM_FK FOREIGN KEY (numM) REFERENCES MEMBRE(numM)
);

---------- Création de la table COMMENTAIRE
CREATE TABLE COMMENTAIRE(
numPhoto NUMBER(20),
numM NUMBER(10),
no NUMBER(30),
contenu VARCHAR2(255) CONSTRAINT CONTENU_Commentaire_NN NOT NULL,
CONSTRAINT Commentaire_PK PRIMARY KEY(numPhoto, numM, no),
CONSTRAINT Commentaire_numPhoto_FK FOREIGN KEY (numPhoto) REFERENCES Photo(numPhoto),
CONSTRAINT Commentaire_numM_FK FOREIGN KEY (numM) REFERENCES MEMBRE(numM)
);

---------- Création de la table JAIME
CREATE TABLE JAIME(
numPhoto NUMBER(20),
numM NUMBER(10),
CONSTRAINT JAIME_PK PRIMARY KEY(numPhoto, numM),
CONSTRAINT JAIME_numMPhoto_FK FOREIGN KEY (numPhoto) REFERENCES Photo(numPhoto),
CONSTRAINT JAIME_numM_FK FOREIGN KEY (numM) REFERENCES MEMBRE(numM)
);

-------------------------------
--         Création des index         --
-------------------------------
-- sur les clés externes 

CREATE UNIQUE INDEX ABONNE_NUMM_IDX ON ABONNE(numM) ;
CREATE UNIQUE INDEX ABONNE_NUMA_IDX ON ABONNE(numAbonne) ;
CREATE UNIQUE INDEX AMI_NUMM_IDX ON AMI(numM) ;
CREATE UNIQUE INDEX AMI_NUMA_IDX ON AMI(numAmi) ;
CREATE UNIQUE INDEX Photo_numM_IDX ON PHOTO(numM) ;
CREATE UNIQUE INDEX Commentaire_numM_IDX ON COMMENTAIRE(numM) ;
CREATE UNIQUE INDEX Commentaire_numPhoto_IDX ON COMMENTAIRE(numPhoto) ;
CREATE UNIQUE INDEX JAIME_numM_IDX ON JAIME(numM) ;
CREATE UNIQUE INDEX JAIME_numMPhoto_IDX ON JAIME(numPhoto) ;

-------------------------------
--         Requêtes          --
-------------------------------

-------------------------------
-- R1 : Noms et prénoms des amis du membre dont l’identifiant est 201701.
-------------------------------

SELECT M.NOM, M.PRENOM
FROM MEMBRE M INNER JOIN AMI A ON (A.NUMM=201701 AND A.NUMAMI=M.NUMM);

-- ou 

SELECT M.NOM, M.PRENOM
FROM MEMBRE M INNER JOIN AMI A ON A.NUMAMI=M.NUMM
WHERE A.NUMM=201701;

-------------------------------
--R2 : Liste des membres, par ordre décroissant des noms et prénoms, qui ont au moins un ami en commun avec le membre dont l’identifiant est 201701.
-------------------------------

SELECT M.NOM, M.PRENOM
FROM MEMBRE M INNER JOIN AMI A1 ON A1.NUMM=M.NUMM
WHERE A1.NUMAMI in (SELECT A2.NUMAMI FROM AMI A2 WHERE A2.NUMM=201701)
ORDER BY M.NOM desc, M.PRENOM desc;

-- Ou

SELECT M.NOM, M.PRENOM
FROM MEMBRE M NATURAL JOIN AMI A1
WHERE A1.NUMAMI in (SELECT A2.NUMAMI FROM AMI A2 WHERE A2.NUMM=201701)
ORDER BY M.NOM desc, M.PRENOM desc;

-- Ou

WITH AMISDE201701 AS (SELECT A2.NUMAMI FROM AMI A2 WHERE A2.NUMM=201701) 
SELECT M.NOM, M.PRENOM
FROM (MEMBRE M NATURAL JOIN AMI A1 ) INNER JOIN AMISDE201701 A2 ON A1.NUMAMI = A2.NUMAMI
ORDER BY M.NOM desc, M.PRENOM desc;

-- Ou

SELECT M.NOM, M.PRENOM
FROM (MEMBRE M NATURAL JOIN AMI A1 ) INNER JOIN AMI A2 ON (A1.NUMAMI = A2.NUMAMI AND A2.NUMM=201701)
ORDER BY M.NOM desc, M.PRENOM desc;

-------------------------------
--R3 : Liste des membres, par ordre croissant des noms et prénoms, qui ont exactement trois (03) amis en commun avec le membre 201701.
-------------------------------

SELECT M.NOM, M.PRENOM
FROM MEMBRE M INNER JOIN AMI A1 ON A1.numM=M.numM
WHERE A1.NUMAMI in (SELECT A2.NUMAMI FROM AMI A2 WHERE A2.NUMM=201701)
GROUP BY M.NOM, M.PRENOM
HAVING COUNT(DISTINCT A1.NUMAMI)=3
ORDER BY M.NOM, M.PRENOM;

-- Ou

SELECT M.NOM, M.PRENOM
FROM MEMBRE M NATURAL JOIN AMI A1
WHERE A1.NUMAMI in (SELECT A2.NUMAMI FROM AMI A2 WHERE A2.NUMM=201701)
GROUP BY M.NOM, M.PRENOM
HAVING COUNT(DISTINCT A1.NUMAMI)=3
ORDER BY M.NOM, M.PRENOM;

-- Ou

WITH AMISDE201701 AS (SELECT A2.numAmi FROM AMI A2 WHERE A2.NumM=201701) 
SELECT M.NOM, M.PRENOM
FROM (MEMBRE M NATURAL JOIN AMI A1 ) INNER JOIN AMISDE201701 A2 ON A1.NUMAMI = A2.NUMAMI
GROUP BY M.NOM, M.PRENOM
HAVING COUNT(DISTINCT A1.NUMAMI)=3
ORDER BY M.NOM, M.PRENOM;

-- Ou

SELECT M.NOM, M.PRENOM
FROM (MEMBRE M NATURAL join AMI A1 ) INNER JOIN AMI A2 ON (A1.NUMAMI = A2.NUMAMI AND A2.NUMM=201701)
GROUP BY M.NOM, M.PRENOM
HAVING COUNT(DISTINCT A1.NUMAMI)=3
ORDER BY M.NOM, M.PRENOM;

-------------------------------
-- R4 : Noms et prénoms des membres qui ont commenté plus de trois fois une même photo.
-------------------------------

WITH COMMENTATEUR AS 
(SELECT C.NUMM
FROM COMMENTAIRE C 
GROUP BY C.NUMPHOTO,C.NUMM
HAVING COUNT(DISTINCT C.NO)>=3)
SELECT M.NOM, M.PRENOM
FROM MEMBRE M NATURAL JOIN COMMENTATEUR;

-------------------------------
--R5 : Pour chaque membre, le nombre moyen de « j’aime » récolté pour toutes les photos qu’il a publiées.
-------------------------------

WITH MEMBREPHOTO AS
(SELECT P.NUMM, J.NUMPHOTO, COUNT(DISTINCT J.NUMM) NJP
FROM JAIME J INNER JOIN PHOTO P ON J.NUMPHOTO=P.NUMPHOTO
GROUP BY P.NUMM, J.NUMPHOTO
) 
SELECT DISTINCT M2.NOM, M2.PRENOM, AVG(M1.NJP) N
FROM MEMBREPHOTO M1 INNER JOIN MEMBRE M2 ON M1.NUMM=M2.NUMM
GROUP BY M2.NOM, M2.PRENOM;

-------------------------------
-- R6 : Noms et prénoms des membres qui sont des amis ou des abonnés du membre 201701 et qui n’ont jamais aimé une de ses photos.
-------------------------------

WITH NOCOMMENT AS
((SELECT DISTINCT A1.NUMABONNE NUM FROM ABONNE A1 WHERE A1.NUMM=201701
UNION
SELECT DISTINCT A2.NUMAMI FROM AMI A2 WHERE A2.NUMM=201701)
MINUS
SELECT DISTINCT J.NUMM FROM PHOTO P INNER JOIN JAIME J ON P.NUMPHOTO=J.NUMPHOTO AND P.NUMM=201701)
SELECT DISTINCT M.NOM, M.PRENOM
FROM MEMBRE M INNER JOIN NOCOMMENT NC ON M.NUMM=NC.NUM;

-- Ou

SELECT DISTINCT M.NOM, M.PRENOM
FROM MEMBRE M 
WHERE M.NUMM in ((SELECT DISTINCT A1.NUMABONNE NUM FROM ABONNE A1 WHERE A1.NUMM=201701
UNION
SELECT DISTINCT A2.NUMAMI FROM AMI A2 WHERE A2.NUMM=201701)
MINUS
SELECT DISTINCT J.NUMM FROM PHOTO P INNER JOIN JAIME J ON P.NUMPHOTO=J.NUMPHOTO AND P.NUMM=201701);
